name: Release

on:
  release:
    types:
      - created

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
          cache-dependency-path: backend/pom.xml
      - name: Build backend
        working-directory: backend
        run: mvn -B clean package
      - name: Log in to the container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract backend metadata (tags, labels) for Docker
        id: backend-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push backend Docker image
        id: backend-push
        uses: docker/build-push-action@v6
        with:
          context: backend/server
          file: backend/server/src/main/docker/Dockerfile.jvm
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          tags: ${{ steps.backend-meta.outputs.tags }}
          labels: ${{ steps.backend-meta.outputs.labels }}
          annotations: ${{ steps.backend-meta.outputs.annotations }}
      - name: Generate backend artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}-backend
          subject-digest: ${{ steps.backend-push.outputs.digest }}
          push-to-registry: true
      - name: Extract web metadata (tags, labels) for Docker
        id: web-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-web
      - name: Build and push web Docker image
        id: web-push
        uses: docker/build-push-action@v6
        with:
          context: web
          platforms: linux/amd64,linux/arm64
          push: true
          provenance: false
          tags: ${{ steps.web-meta.outputs.tags }}
          labels: ${{ steps.web-meta.outputs.labels }}
          annotations: ${{ steps.web-meta.outputs.annotations }}
          build-args: |
            GIT_SHA=${{ github.sha }}
      - name: Generate web artifact attestation
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}-web
          subject-digest: ${{ steps.web-push.outputs.digest }}
          push-to-registry: true
