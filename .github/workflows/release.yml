name: Docker Image CI

on:
  release:
    types:
      - created

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v5
    - name: Set up JDK
      uses: actions/setup-java@v5
      with:
        distribution: 'graalvm'
        java-version: '21'
        cache: 'maven'
    - name: Build backend dependencies
      working-directory: backend
      run: mvn -B clean install
    - name: Build backend server
      working-directory: backend/server
      run: mvn -B clean package -Dnative -Dquarkus.native.container-build=true -f pom.xml
    - name: Log in to the container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-web
    - name: Build and push backend docker image
      id: backend-push
      uses: docker/build-push-action@v6
      with:
        context: backend/server
        file: src/main/docker/Dockerfile.native-micro
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Generate backend artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}-backend
        subject-digest: ${{ steps.backend-push.outputs.digest }}
        push-to-registry: true
    - name: Build and push web docker image
      id: web-push
      uses: docker/build-push-action@v6
      with:
        context: web
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
    - name: Generate web artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}-web
        subject-digest: ${{ steps.web-push.outputs.digest }}
        push-to-registry: true
